# version of compose
version: "3.8"
# name: symfony-sample1
# list of volumes and named them
volumes:
  # ********** nginx
  nginx_log:
  # ********** mysql
  mysql_lib:
  # ********** redis
  redis_data:
  # ********** postgresql
  postgresql_data:
# list of networks
networks:
  qanat:
    driver: bridge
# list of services
services:
# -------------------------------------------------- nginx
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    hostname: ${NGINX_HOSTNAME}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    tty: true
    extra_hosts:
        - "symfony-sample1.local:127.0.0.1"
    volumes:
      # - nginx_log:/var/log/nginx
      - ./src/:/var/www/html/
    environment:
      TZ: ${TIMEZONE}
    networks:
      - qanat
    depends_on:
      - php
# -------------------------------------------------- php
  php:
    container_name: php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    hostname: ${PHP_HOSTNAME}
    restart: always
    tty: true
    volumes:
      - ./src/:/var/www/html/
      # - .docker/php/conf/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      TZ: ${TIMEZONE}
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    networks:
      - qanat
# -------------------------------------------------- mysql - db
  mysql:
    container_name: mysql
    image: mysql
    restart: always
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # MYSQL_DATABASE: ${MYSQL_DATABASE}
      # MYSQL_USER: ${MYSQL_USER}
      # MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      TZ: ${TIMEZONE}
    # env_file: mysql.env
    ports:
      - 3306:3306
    volumes:
      # - mysql_data:/var/usr/mysql
      - mysql_lib:/var/lib/mysql
      # - ./services/mysql/production/my.cnf:/etc/mysql/my.cnf
    networks:
      - qanat
# -------------------------------------------------- phpmyadmin
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    restart: on-failure
    # entrypoint: ["echo", "Service phpmyadmin disabled"]
    ports:
      - 8094:80
    networks:
      - qanat
    depends_on:
      - nginx
      - php
      - mysql
    profiles: ["phpmyadmin"]
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_ARBITRARY: 1
# -------------------------------------------------- postgresql
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      TZ: ${TIMEZONE}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgresql_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "1254"
    networks:
      - qanat
    profiles: ["postgres"]
# -------------------------------------------------- adminer
  adminer:
    container_name: adminer
    image: adminer
    restart: on-failure
    # entrypoint: ["echo", "Service adminer disabled"]
    ports:
      - 8092:8080
    networks:
      - qanat
    depends_on:
      - nginx
      - php
      - database
    profiles: ["postgres"]
#
# eol
